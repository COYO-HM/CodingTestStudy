# 출처: https://blog.naver.com/boostcamp_official/223085597916
# BOOST CAMP 예시 문항2

# =========================================

<문제>
여러분은 새로운 컴퓨터를 만들고 8바이트 단위로 관리하는 타입별 메모리 관리 방식을 시뮬레이션 하려고 합니다.
지원하는 타입별 크기는 다음과 같습니다.

 BOOL 1byte
SHORT 2byte
FLOAT 4byte
INT 8byte
LONG 16byte

매개변수 param0에 타입들을 입력한 순서대로 메모리를 할당한 결과를 8byte 단위로 구분해서 return해주는 solution함수 작성
단, BOOL을 제외한 8byte보다 작은 타입들이 연속될 경우에는 사이에 패딩(.)을 붙여야 합니다.
SHORT는 2배수, FLOAT는 4배수가 되도록 메모리를 할당해야 합니다.

예를 들어 BOOL타입 이후에 BOOL타입은 바로 붙여서 할당할 수 있습니다.
"BOOL", "BOOL" => "##......"

그렇지만 BOOL타입 이후에 SHORT, FLOAT를 할당하기 위해서는 각각 1개, 3개 패딩을 붙여야 합니다.
"BOOL", "SHORT" => "#.##...."
"BOOL", "FLOAT" => "#...####"
"BOOL", "SHORT", "FLOAT" => "#.######"

BOOL타입 이후에 크기가 8byte이상인 타입은 7개 패딩을 붙여야 합니다.
"BOOL", "INT" => "#......., ########"

BOOL과 마찬가지로 8byte보다 작은 SHORT, FLOAT도 뒤에 패딩을 붙여야 합니다.
"SHORT", "BOOL" => ###....."
"FLOAT", "SHORT" => "######.."


<제한 사항>
- 입력 타입은 1개 이상, 100개 이하까지만 가능
- 출력하는 메모리 최대 크기는 128byte를 기준으로 동작. 따라서 128byte보다 큰 메모리 할당은 불가능
- 만약 타입 하나라도 더 이상 할당할 수 없는 경우는 "HALT" 리턴

# =========================================

>> 입출력 예 #1
입력: ["INT", "INT", "BOOL", "SHORT", "LONG"]
return: "########, ########, #.##...., ########, ########"

설명: BOOL 이후에 SHORT 선언해서 1바이트 패딩,
SHORT 이후에 LONG 선언해서 4바이트 패딩

# =========================================

>> 입출력 예 #2
입력: ["INT", "SHORT", "FLOAT", "INT", "BOOL"]
return: "########, ##..####, ########, #......."

설명: SHORT 이후에 FLOAT 선언해서 2바이트 패딩,
마지막에 BOOL이 나와서 7바이트 패딩

# =========================================

>> 입출력 예 #3
입력: ["FLOAT", "SHORT", "BOOL", "BOOL", "BOOL", "INT"]
return: "########, #......., ########"

설명: FLOAT 이후에 SHORT 선언, SHORT 이후 BOOL, BOOL 두 번 선언해서 8바이트 채움
이후 BOOL 타입 선언으로 다음 영역에서 7바이트 패딩

# =========================================

>> 입출력 예 #4
입력: ["BOOL", "LONG", "SHORT", "LONG", "BOOL", "LONG", "BOOL", "LONG", "SHORT", "LONG", "LONG"]
return: "HALT"

설명: BOOL이나 SHORT 이후에 LONG 선언해서 8+16+8+16+8+16+8+16+8+16+16 = 136바이트
메모리 최대 크기 128바이트를 넘기 때문에 HALT

# =========================================